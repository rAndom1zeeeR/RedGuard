#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è RedGuard —Å–µ—Ä–≤–µ—Ä–∞
# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –¥–∞–Ω–Ω—ã—Ö –∏ –ª–æ–≥–æ–≤

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="/opt/vpn-proxy/backups"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
BACKUP_NAME="vpn-proxy-backup-$TIMESTAMP"
BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
RETENTION_DAYS=30

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p "$BACKUP_DIR"

log "–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ RedGuard —Å–µ—Ä–≤–µ—Ä–∞"
info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–∞: $BACKUP_PATH"
info "–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: $TIMESTAMP"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$BACKUP_PATH"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞..."
cd /opt/vpn-proxy
docker compose down || true

# –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
sleep 10

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
mkdir -p "$BACKUP_PATH/config"
cp -r /opt/vpn-proxy/config/* "$BACKUP_PATH/config/" 2>/dev/null || true
cp /opt/vpn-proxy/.env* "$BACKUP_PATH/" 2>/dev/null || true
cp /opt/vpn-proxy/docker-compose*.yml "$BACKUP_PATH/" 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –¥–∞–Ω–Ω—ã—Ö
log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –¥–∞–Ω–Ω—ã—Ö..."
mkdir -p "$BACKUP_PATH/data"
cp -r /opt/vpn-proxy/data/* "$BACKUP_PATH/data/" 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ª–æ–≥–æ–≤
log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ª–æ–≥–æ–≤..."
mkdir -p "$BACKUP_PATH/logs"
cp -r /opt/vpn-proxy/logs/* "$BACKUP_PATH/logs/" 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
mkdir -p "$BACKUP_PATH/ssl"
cp -r /etc/letsencrypt/* "$BACKUP_PATH/ssl/" 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Docker volumes
log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Docker volumes..."
mkdir -p "$BACKUP_PATH/volumes"

# –≠–∫—Å–ø–æ—Ä—Ç Redis –¥–∞–Ω–Ω—ã—Ö
log "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö Redis..."
docker run --rm -v vpn-proxy_redis-data:/data -v "$BACKUP_PATH/volumes":/backup alpine tar czf /backup/redis-data.tar.gz -C /data . 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
log "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ..."
cat > "$BACKUP_PATH/system-info.txt" << EOF
RedGuard Server Backup Information
===================================

Backup Date: $(date)
Server ID: ${SERVER_ID:-unknown}
Hostname: $(hostname)
OS: $(lsb_release -d | cut -f2)
Kernel: $(uname -r)
Docker Version: $(docker --version)
Docker Compose Version: $(docker compose version)
Node.js Version: $(node --version 2>/dev/null || echo "Not installed")
TypeScript Version: $(tsc --version 2>/dev/null || echo "Not installed")

Disk Usage:
$(df -h)

Memory Usage:
$(free -h)

Docker Images:
$(docker images)

Docker Containers:
$(docker ps -a)

Network Configuration:
$(ip addr show)

Firewall Status:
$(ufw status)

Services Status:
$(systemctl status vpn-proxy --no-pager -l || echo "Service not found")
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
cat > "$BACKUP_PATH/restore.sh" << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è RedGuard —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
fi

log "–ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ RedGuard —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
cd /opt/vpn-proxy
docker compose down || true

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cp -r config/* /opt/vpn-proxy/config/ 2>/dev/null || true
cp .env* /opt/vpn-proxy/ 2>/dev/null || true
cp docker-compose*.yml /opt/vpn-proxy/ 2>/dev/null || true

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
cp -r data/* /opt/vpn-proxy/data/ 2>/dev/null || true

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤
log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤..."
cp -r logs/* /opt/vpn-proxy/logs/ 2>/dev/null || true

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
cp -r ssl/* /etc/letsencrypt/ 2>/dev/null || true

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Docker volumes
log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Docker volumes..."
if [ -f "volumes/redis-data.tar.gz" ]; then
    docker run --rm -v vpn-proxy_redis-data:/data -v "$(pwd)/volumes":/backup alpine tar xzf /backup/redis-data.tar.gz -C /data
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R vpn-proxy:vpn-proxy /opt/vpn-proxy
chmod 600 /opt/vpn-proxy/.env*

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ health check..."
curl -f http://localhost:3000/api/health || warning "Health check failed"

log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
EOF

chmod +x "$BACKUP_PATH/restore.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
log "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
cd "$BACKUP_DIR"
tar -czf "$BACKUP_NAME.tar.gz" "$BACKUP_NAME"

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
rm -rf "$BACKUP_PATH"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ö–∏–≤–∞
ARCHIVE_SIZE=$(du -h "$BACKUP_NAME.tar.gz" | cut -f1)
log "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $BACKUP_NAME.tar.gz (—Ä–∞–∑–º–µ—Ä: $ARCHIVE_SIZE)"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–±—Ä–∞—Ç–Ω–æ
log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
cd /opt/vpn-proxy
docker compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose ps

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π)..."
find "$BACKUP_DIR" -name "vpn-proxy-backup-*.tar.gz" -mtime +$RETENTION_DAYS -delete 2>/dev/null || true

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤
log "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
ls -lh "$BACKUP_DIR"/vpn-proxy-backup-*.tar.gz 2>/dev/null || echo "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞..."
cat > /etc/cron.d/vpn-proxy-backup << EOF
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø RedGuard —Å–µ—Ä–≤–µ—Ä–∞
# –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00
0 2 * * * root /opt/vpn-proxy/scripts/backup.sh > /opt/vpn-proxy/logs/backup.log 2>&1
EOF

log "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00)"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
log "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
info "–§–∞–π–ª: $BACKUP_DIR/$BACKUP_NAME.tar.gz"
info "–†–∞–∑–º–µ—Ä: $ARCHIVE_SIZE"
info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: tar -xzf $BACKUP_NAME.tar.gz && cd $BACKUP_NAME && ./restore.sh"

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d chat_id="$TELEGRAM_CHAT_ID" \
        -d text="üîÑ RedGuard Server Backup

‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ
üìÅ –§–∞–π–ª: $BACKUP_NAME.tar.gz
üìä –†–∞–∑–º–µ—Ä: $ARCHIVE_SIZE
üïê –í—Ä–µ–º—è: $(date)
üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: $(hostname)" \
        > /dev/null 2>&1 || true
fi

log "–°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω!"
