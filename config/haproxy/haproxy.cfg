global
    log stdout format raw local0 info
    maxconn 50000
    user haproxy
    group haproxy
    daemon
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048
    stats socket /var/run/haproxy.sock mode 600 level admin
    stats timeout 2m

defaults
    log global
    mode http
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    timeout http-request 10s
    timeout http-keep-alive 10s
    timeout check 5s
    maxconn 10000

# Frontend для HTTP (порт 80)
frontend http_frontend
    bind *:80
    mode http
    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ http
    default_backend http_backend

# Frontend для HTTPS (порт 443)
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/private/combined.pem
    mode http
    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ https
    default_backend https_backend

# Frontend для HTTP прокси (порт 8080)
frontend http_proxy_frontend
    bind *:8080
    mode http
    option forwardfor
    option http-server-close
    reqadd X-Forwarded-Proto:\ http
    default_backend http_proxy_backend

# Frontend для SOCKS прокси (порт 1080)
frontend socks_proxy_frontend
    bind *:1080
    mode tcp
    option tcp-check
    default_backend socks_proxy_backend

# Backend для HTTP
backend http_backend
    mode http
    balance roundrobin
    option httpchk GET /api/health
    http-check expect status 200
    server server1 172.20.0.10:80 check weight 100 maxconn 1000
    server server2 172.20.0.20:80 check weight 100 maxconn 1000
    server server3 172.20.0.30:80 check weight 100 maxconn 1000

# Backend для HTTPS
backend https_backend
    mode http
    balance roundrobin
    option httpchk GET /api/health
    http-check expect status 200
    server server1 172.20.0.10:443 check weight 100 maxconn 1000 ssl verify none
    server server2 172.20.0.20:443 check weight 100 maxconn 1000 ssl verify none
    server server3 172.20.0.30:443 check weight 100 maxconn 1000 ssl verify none

# Backend для HTTP прокси
backend http_proxy_backend
    mode http
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server server1 172.20.0.10:8080 check weight 100 maxconn 1000
    server server2 172.20.0.20:8080 check weight 100 maxconn 1000
    server server3 172.20.0.30:8080 check weight 100 maxconn 1000

# Backend для SOCKS прокси
backend socks_proxy_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server server1 172.20.0.10:1080 check weight 100 maxconn 1000
    server server2 172.20.0.20:1080 check weight 100 maxconn 1000
    server server3 172.20.0.30:1080 check weight 100 maxconn 1000

# Статистика HAProxy
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:${HAPROXY_STATS_PASSWORD}
    stats admin if TRUE
